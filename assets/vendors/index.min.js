"use strict";

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

;

(function ($, wind) {
  'use strict';



  var swiperClass = document.getElementsByClassName('swiper-container');
  var swipers = [];



  var findClosestDescendant = function findClosestDescendant($item, el, closest) {
    return $item.find(el).filter(function () {
      return $(this).closest(closest).is($item);
    });
  };

  var swiper = function swiper(that, key) {
    var index = "swiper-unique-".concat(key);
    that.classList.add(index);
    that.setAttribute('id', index); 

    var elArrows = $(that).parent(),
        arrowPrev = findClosestDescendant(elArrows, '.swiper-button-prev', '.swiper'),
        arrowNext = findClosestDescendant(elArrows, '.swiper-button-next', '.swiper'); 

    var elPagination = that.parentNode.querySelector(':not(.swiper-slide) .swiper-pagination');

    if (elPagination) {
      elPagination.classList.add('swiper-pagination-' + index);
    } 


    var dataLoop = !!that.getAttribute('data-loop'),
        dataInteraction = !!that.getAttribute('data-interaction'),
        dataSpeed = +that.getAttribute('data-speed'),
        dataEffect = that.getAttribute('data-effect'),
        dataProgressMove = that.getAttribute('data-progress-move'),
        dataCenterSlide = !!that.getAttribute('data-center-slide'),
        dataInitialSlide = +that.getAttribute('data-initial-slide'),
        dataAutoplayDelay = +that.getAttribute('data-autoplay-delay'),
        dataSimulateTouch = !!that.getAttribute('data-simulate-touch'),
        dataDirection = that.getAttribute('data-direction'),
        dataSlidePreview = +that.getAttribute('data-slides-preview'),
        dataPaginationType = that.getAttribute('data-pagination-type'),
        dataSlideToClicked = !!that.getAttribute('data-slide-clicked'),
        dataSpaceBetween = +that.getAttribute('data-slides-space'),
        dataAutoHeight = !!that.getAttribute('data-auto-height');
    var dataLazy = +that.getAttribute('data-lazy'),
        dataMousewheel = +that.getAttribute('data-mousewheel');
    var dataAutoplay = !!that.getAttribute('data-autoplay');

    if (dataAutoplay) {
      dataAutoplay = {
        delay: dataAutoplayDelay,
        disableOnInteraction: dataInteraction
      };
    }

    if (dataMousewheel) {
      dataMousewheel = {
        invert: false
      };
    }

    if (dataLazy) {
      dataLazy = {
        loadPrevNext: true,
        loadPrevNextAmount: dataLazy,
        loadOnTransitionStart: true
      };
    } 


    var dataSlidePreview_xs = that.getAttribute('data-slides-preview-xs'),
        dataSpaceBetween_xs = that.getAttribute('data-space-xs');

    var breakpoints = _defineProperty({}, 0, {
      slidesPerView: dataSlidePreview_xs,
      spaceBetween: dataSpaceBetween_xs
    }); 


    swipers[index] = new Swiper('.' + index, {
      autoplay: dataAutoplay,
      loop: dataLoop,
      simulateTouch: dataSimulateTouch,
      effect: dataEffect,
      speed: dataSpeed,
      direction: dataDirection,
      centeredSlides: dataCenterSlide,
      slidesPerView: dataSlidePreview,
      spaceBetween: dataSpaceBetween,
      loopAdditionalSlides: 4,
      roundLengths: true,
      noSwiping: true,
      noSwipingClass: 'swiper-no-swiping',
      watchSlidesVisibility: true,
      slideVisibleClass: 'swiper-slide-visible',
      pagination: {
        el: ".swiper-pagination-".concat(index),
        type: dataPaginationType,
        clickable: true
      },
      navigation: {
        nextEl: arrowNext,
        prevEl: arrowPrev
      },
      on: {
        init: function init() {}
      }
    });
    $(that).hover(function () {
    }, function () {
    });
  };

  window.initSwiper = function (target) {
    if (target) {
      Array.prototype.forEach.call(target, swiper);
    }
  };

  $(window).on('load', function () {
    if (swiperClass.length) {
      initSwiper(swiperClass);
    }
  });
  $(window).on('elementor/frontend/init', function () {
    if (window.location.href.indexOf('elementor-preview') > -1) {
      elementorFrontend.hooks.addAction('frontend/element_ready/widget', function ($scope) {
        if (swiperClass.length) {
          initSwiper(swiperClass);
        }
      });
    }
  });
})(jQuery, window);
