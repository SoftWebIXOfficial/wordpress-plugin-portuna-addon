"use strict";

(function () {
  'use strict';

  (function ($, w) {
    var elementorAreaRender = {
      onInit: function onInit() {
        this.bindEvents();
      },
      bindEvents: function bindEvents() {
        this.eventCloseWindow();
        this.eventElementorManager();
      },
      eventCloseWindow: function eventCloseWindow() {
        $('.eicon-close').on('click', function () {
          $('.portuna-addon-modal').hide();
        });
      },
      eventElementorManager: function eventElementorManager() {
        var elementorControls = elementor.modules.controls.BaseData.extend({
          ui: function ui() {
            var ui = elementor.modules.controls.BaseData.prototype.ui.apply(this, arguments);
            ui.inputs = '[type="text"]';
            return ui;
          },
          events: function events() {
            return _.extend(elementor.modules.controls.BaseData.prototype.events.apply(this, arguments), {
              "change @ui.inputs": "onBaseInputChange"
            });
          },
          onBaseInputChange: function onBaseInputChange(e) {
            clearTimeout(this.correctionTimeout);
            var target = e.currentTarget,
                inputVal = this.getInputValue(target);
            this.validators.slice(0), this.elementSettingsModel.validators[this.model.get('name')];
            this.updateElementModel(inputVal, target);
          },
          onDestroy: function onDestroy() {
            clearInterval(window.elementorAreaInterval);
          },
          onRender: function onRender() {
            elementor.modules.controls.BaseData.prototype.onRender.apply(this, arguments);

            var _this = this;

            clearInterval(window.elementorAreaInterval);
            window.elementorAreaInterval = setInterval(function () {
              var dataLoad = $('body').attr('data-portuna-widget-load'),
                  dataKey = $('body').attr('data-portuna-key');

              if ('true' == dataLoad && 1 == _this.isRendered) {
                var val,
                    date = new Date().getTime(),
                    key = dataKey.split('***');
                val = (key = key[0]) + '***' + date;
                $('body').attr('data-portuna-widget-load', 'false');

                _this.setValue(val);
              }
            }, 50);
          }
        });
        elementor.addControlView('elementor_area', elementorControls);
      }
    };
    $(w).on('elementor:init', function () {
      elementorAreaRender.onInit();
    });
  })(jQuery, window);
})();
